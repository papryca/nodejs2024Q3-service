generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  login     String
  password  String
  version   Int      @default(1)
  createdAt DateTime @default(now()) @db.Timestamp()
  updatedAt DateTime @updatedAt @db.Timestamp()
}

model Artist {
  id             String          @id @default(uuid())
  name           String
  grammy         Boolean
  albums         Album[]
  tracks         Track[]
  FavoriteArtist FavoriteArtist?
}

model Album {
  id            String         @id @default(uuid())
  name          String
  year          Int
  artistId      String?
  artist        Artist?        @relation(fields: [artistId], references: [id])
  tracks        Track[]
  FavoriteAlbum FavoriteAlbum?
}

model Track {
  id            String         @id @default(uuid())
  name          String
  artistId      String?
  albumId       String?
  duration      Int
  artist        Artist?        @relation(fields: [artistId], references: [id])
  album         Album?         @relation(fields: [albumId], references: [id])
  FavoriteTrack FavoriteTrack?
}

model FavoriteArtist {
  artist   Artist @relation(fields: [artistId], references: [id], onDelete: Cascade)
  artistId String @unique
}

model FavoriteTrack {
  track   Track  @relation(fields: [trackId], references: [id], onDelete: Cascade)
  trackId String @unique
}

model FavoriteAlbum {
  album   Album  @relation(fields: [albumId], references: [id], onDelete: Cascade)
  albumId String @unique
}
